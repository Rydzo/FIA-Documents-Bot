name: FIA Telegram Bot

on:
  schedule:
    - cron: "*/5 * * * *"   # co 5 minut (UTC)
  workflow_dispatch:

permissions:
  contents: write    # pozwól akcji zapisywać do repo (commit/push)

concurrency:
  group: fia-telegram-bot
  cancel-in-progress: true

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true   # użyj GITHUB_TOKEN do push

      # Upewnij się, że plik istnieje (pierwszy run)
      - name: Ensure last_seen.txt exists
        run: |
          if [ ! -f last_seen.txt ]; then
            echo "" > last_seen.txt
          fi
          echo "== before run last_seen.txt =="
          cat last_seen.txt || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python FIA_Bot.py
          echo "== after run last_seen.txt =="
          cat last_seen.txt || true

      # Zapisz zaktualizowany last_seen.txt do repo, ALE tylko gdy się zmienił
      - name: Commit updated last_seen.txt (if changed)
        run: |
          if git diff --quiet -- last_seen.txt; then
            echo "No changes in last_seen.txt, skipping commit."
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add last_seen.txt
            git commit -m "Update last_seen.txt [skip ci]"
            git push
          fi
